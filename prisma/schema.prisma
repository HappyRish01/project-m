// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(EMPLOYEE)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  ADMIN
  EMPLOYEE
}

enum Unit {
  Kata
  Bag
  Peti
}

model Product {
  id        String   @id @default(cuid())
  name      String
  price     Float //ppq
  hsnCode   String   @unique
  kgpunit   Float
  gst       Int
  unit      Unit
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  BillItem BillItem[]
}

model Bill {
  id            Int        @id @default(autoincrement())
  date          DateTime
  name          String
  address       String?
  panNumber     String?
  GSTINumber    String?
  totalAmount   Float
  subTotal      Float?
  totalGst      Float?
  gstBreakdown  Json?
  stateCode     String?
  state         String?
  vehicleNumber String?
  items         BillItem[]
  createdAt     DateTime   @default(now())
}

model BillItem {
  id        Int     @id @default(autoincrement())
  billId    Int
  productId String? // optional in case product is deleted later
  name      String
  hsnCode   String
  quantity  Float
  price     Float
  gst       Int
   kgpunit    Float?
  unit       Unit?
  bill    Bill     @relation(fields: [billId], references: [id])
  product Product? @relation(fields: [productId], references: [id])
}
